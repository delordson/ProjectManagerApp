//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Inserting(global::LightSwitchApplication.ClientContact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Inserted(global::LightSwitchApplication.ClientContact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Updating(global::LightSwitchApplication.ClientContact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Updated(global::LightSwitchApplication.ClientContact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Deleting(global::LightSwitchApplication.ClientContact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Deleted(global::LightSwitchApplication.ClientContact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Validate(global::LightSwitchApplication.ClientContact entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientContacts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientContact, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Inserting(global::LightSwitchApplication.EmployeeSkills entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Inserted(global::LightSwitchApplication.EmployeeSkills entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Updating(global::LightSwitchApplication.EmployeeSkills entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Updated(global::LightSwitchApplication.EmployeeSkills entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Deleting(global::LightSwitchApplication.EmployeeSkills entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Deleted(global::LightSwitchApplication.EmployeeSkills entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Validate(global::LightSwitchApplication.EmployeeSkills entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeSkills, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Inserting(global::LightSwitchApplication.ProjectResource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Inserted(global::LightSwitchApplication.ProjectResource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Updating(global::LightSwitchApplication.ProjectResource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Updated(global::LightSwitchApplication.ProjectResource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Deleting(global::LightSwitchApplication.ProjectResource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Deleted(global::LightSwitchApplication.ProjectResource entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Validate(global::LightSwitchApplication.ProjectResource entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResources_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectResource, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Inserting(global::LightSwitchApplication.ProjectResourceTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Inserted(global::LightSwitchApplication.ProjectResourceTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Updating(global::LightSwitchApplication.ProjectResourceTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Updated(global::LightSwitchApplication.ProjectResourceTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Deleting(global::LightSwitchApplication.ProjectResourceTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Deleted(global::LightSwitchApplication.ProjectResourceTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Validate(global::LightSwitchApplication.ProjectResourceTask entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectResourceTasks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectResourceTask, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Inserting(global::LightSwitchApplication.ProjectRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Inserted(global::LightSwitchApplication.ProjectRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Updating(global::LightSwitchApplication.ProjectRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Updated(global::LightSwitchApplication.ProjectRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Deleting(global::LightSwitchApplication.ProjectRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Deleted(global::LightSwitchApplication.ProjectRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Validate(global::LightSwitchApplication.ProjectRisk entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRisks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRisk, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Inserting(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Inserted(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Updating(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Updated(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Deleting(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Deleted(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Validate(global::LightSwitchApplication.ProjectTask entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTask, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyTasks_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyTasks_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyTasks_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProjectResourceTask> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyTasks_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProjectResourceTask> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyTasks_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyProjectAssignments_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyProjectAssignments_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyProjectAssignments_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyProjectAssignments_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyProjectAssignments_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ClientContact>
                __ClientContactsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ClientContact>(
                    "ClientContacts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientContacts_Filter);
            private static bool __ClientContacts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientContacts_CanInsert(ref result);
                return result;
            }
            private static bool __ClientContacts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientContacts_CanUpdate(ref result);
                return result;
            }
            private static bool __ClientContacts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientContacts_CanDelete(ref result);
                return result;
            }
            private static bool __ClientContacts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientContacts_CanRead(ref result);
                return result;
            }
            private static void __ClientContacts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e)
            {
                d.ClientContacts_Inserting(e);
            }
            private static void __ClientContacts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e)
            {
                d.ClientContacts_Inserted(e);
            }
            private static void __ClientContacts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e)
            {
                d.ClientContacts_Updating(e);
            }
            private static void __ClientContacts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e)
            {
                d.ClientContacts_Updated(e);
            }
            private static void __ClientContacts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e)
            {
                d.ClientContacts_Deleting(e);
            }
            private static void __ClientContacts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e)
            {
                d.ClientContacts_Deleted(e);
            }
            private static void __ClientContacts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientContact e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ClientContacts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientContact, bool>> __ClientContacts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientContact, bool>> filter = null;
                d.ClientContacts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Clients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Filter);
            private static bool __Clients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanInsert(ref result);
                return result;
            }
            private static bool __Clients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanUpdate(ref result);
                return result;
            }
            private static bool __Clients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanDelete(ref result);
                return result;
            }
            private static bool __Clients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanRead(ref result);
                return result;
            }
            private static void __Clients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserting(e);
            }
            private static void __Clients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserted(e);
            }
            private static void __Clients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updating(e);
            }
            private static void __Clients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updated(e);
            }
            private static void __Clients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleting(e);
            }
            private static void __Clients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleted(e);
            }
            private static void __Clients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Clients_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __Clients_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.Clients_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeSkills>
                __EmployeeSkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeSkills>(
                    "EmployeeSkills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Filter);
            private static bool __EmployeeSkills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeSkills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeSkills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeSkills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanRead(ref result);
                return result;
            }
            private static void __EmployeeSkills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e)
            {
                d.EmployeeSkills_Inserting(e);
            }
            private static void __EmployeeSkills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e)
            {
                d.EmployeeSkills_Inserted(e);
            }
            private static void __EmployeeSkills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e)
            {
                d.EmployeeSkills_Updating(e);
            }
            private static void __EmployeeSkills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e)
            {
                d.EmployeeSkills_Updated(e);
            }
            private static void __EmployeeSkills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e)
            {
                d.EmployeeSkills_Deleting(e);
            }
            private static void __EmployeeSkills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e)
            {
                d.EmployeeSkills_Deleted(e);
            }
            private static void __EmployeeSkills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkills e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeSkills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeSkills, bool>> __EmployeeSkills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeSkills, bool>> filter = null;
                d.EmployeeSkills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectResource>
                __ProjectResourcesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectResource>(
                    "ProjectResources",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResources_Filter);
            private static bool __ProjectResources_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResources_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectResources_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResources_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectResources_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResources_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectResources_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResources_CanRead(ref result);
                return result;
            }
            private static void __ProjectResources_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e)
            {
                d.ProjectResources_Inserting(e);
            }
            private static void __ProjectResources_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e)
            {
                d.ProjectResources_Inserted(e);
            }
            private static void __ProjectResources_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e)
            {
                d.ProjectResources_Updating(e);
            }
            private static void __ProjectResources_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e)
            {
                d.ProjectResources_Updated(e);
            }
            private static void __ProjectResources_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e)
            {
                d.ProjectResources_Deleting(e);
            }
            private static void __ProjectResources_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e)
            {
                d.ProjectResources_Deleted(e);
            }
            private static void __ProjectResources_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResource e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectResources_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectResource, bool>> __ProjectResources_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectResource, bool>> filter = null;
                d.ProjectResources_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectResourceTask>
                __ProjectResourceTasksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectResourceTask>(
                    "ProjectResourceTasks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectResourceTasks_Filter);
            private static bool __ProjectResourceTasks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResourceTasks_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectResourceTasks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResourceTasks_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectResourceTasks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResourceTasks_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectResourceTasks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectResourceTasks_CanRead(ref result);
                return result;
            }
            private static void __ProjectResourceTasks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e)
            {
                d.ProjectResourceTasks_Inserting(e);
            }
            private static void __ProjectResourceTasks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e)
            {
                d.ProjectResourceTasks_Inserted(e);
            }
            private static void __ProjectResourceTasks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e)
            {
                d.ProjectResourceTasks_Updating(e);
            }
            private static void __ProjectResourceTasks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e)
            {
                d.ProjectResourceTasks_Updated(e);
            }
            private static void __ProjectResourceTasks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e)
            {
                d.ProjectResourceTasks_Deleting(e);
            }
            private static void __ProjectResourceTasks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e)
            {
                d.ProjectResourceTasks_Deleted(e);
            }
            private static void __ProjectResourceTasks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectResourceTask e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectResourceTasks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectResourceTask, bool>> __ProjectResourceTasks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectResourceTask, bool>> filter = null;
                d.ProjectResourceTasks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectRisk>
                __ProjectRisksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectRisk>(
                    "ProjectRisks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRisks_Filter);
            private static bool __ProjectRisks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRisks_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectRisks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRisks_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectRisks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRisks_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectRisks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRisks_CanRead(ref result);
                return result;
            }
            private static void __ProjectRisks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e)
            {
                d.ProjectRisks_Inserting(e);
            }
            private static void __ProjectRisks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e)
            {
                d.ProjectRisks_Inserted(e);
            }
            private static void __ProjectRisks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e)
            {
                d.ProjectRisks_Updating(e);
            }
            private static void __ProjectRisks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e)
            {
                d.ProjectRisks_Updated(e);
            }
            private static void __ProjectRisks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e)
            {
                d.ProjectRisks_Deleting(e);
            }
            private static void __ProjectRisks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e)
            {
                d.ProjectRisks_Deleted(e);
            }
            private static void __ProjectRisks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRisk e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectRisks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRisk, bool>> __ProjectRisks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRisk, bool>> filter = null;
                d.ProjectRisks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectTask>
                __ProjectTasksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectTask>(
                    "ProjectTasks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Filter);
            private static bool __ProjectTasks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectTasks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectTasks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectTasks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanRead(ref result);
                return result;
            }
            private static void __ProjectTasks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Inserting(e);
            }
            private static void __ProjectTasks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Inserted(e);
            }
            private static void __ProjectTasks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Updating(e);
            }
            private static void __ProjectTasks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Updated(e);
            }
            private static void __ProjectTasks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Deleting(e);
            }
            private static void __ProjectTasks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Deleted(e);
            }
            private static void __ProjectTasks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectTasks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTask, bool>> __ProjectTasks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTask, bool>> filter = null;
                d.ProjectTasks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectResourceTask>
                __MyTasksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectResourceTask>(
                    "MyTasks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTasks_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTasks_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTasks_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTasks_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTasks_PreprocessQuery);
            private static bool __MyTasks_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyTasks_CanExecute(ref r);
                return r;
            }
            private static void __MyTasks_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyTasks_Executing();
            }
            private static void __MyTasks_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyTasks_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProjectResourceTask>)args[0]);
            }
            private static void __MyTasks_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyTasks_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyTasks_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProjectResourceTask> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProjectResourceTask>)args[0];
                d.MyTasks_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __MyProjectAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "MyProjectAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyProjectAssignments_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyProjectAssignments_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyProjectAssignments_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyProjectAssignments_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyProjectAssignments_PreprocessQuery);
            private static bool __MyProjectAssignments_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyProjectAssignments_CanExecute(ref r);
                return r;
            }
            private static void __MyProjectAssignments_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyProjectAssignments_Executing();
            }
            private static void __MyProjectAssignments_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyProjectAssignments_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[0]);
            }
            private static void __MyProjectAssignments_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyProjectAssignments_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyProjectAssignments_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[0];
                d.MyProjectAssignments_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
